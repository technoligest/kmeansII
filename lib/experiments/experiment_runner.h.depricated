//
// Created by Yaser Alkayale on 2017-07-04.
//

#ifndef KMEANSII_EXPERIMENTRUNNER_HH
#define KMEANSII_EXPERIMENTRUNNER_HH

#include <dirent.h>
#include "../algorithm/kmeans_data.h"
#include "../algorithm/kmeans.h"
#include "experiment_result.h"
#include "experiment_helpers.h"

namespace kmeans{
namespace experiments{

class ExperimentRunner{
private:
  Dataset d_;
  ull k_;     //number of clusters
  int l_;     //oversampling factor for kmeans||
  int r_;     //number of rounds for kmeans||

  std::vector<ExperimentResult> results_;

public:
  static ExperimentResult runAlg(KmeansBase *kmeans, const std::string &algName);

  ExperimentRunner(Dataset &d, ull k){}

  ExperimentRunner(Dataset &d, ull k, int l, int r = 8) : d_(d), k_(k), l_(l), r_(r) {};

  ExperimentRunner(Dataset &&d, ull k, int l, int r = 8) : d_(d), k_(k), l_(l), r_(r) {};

  ExperimentRunner(std::vector<ExperimentResult> &r) : results_(r) {};

  inline std::vector<ExperimentResult> getExperiments() const { return results_; }


  //Helper methon to run all algprithms at the same time.
  void runExperiments(ull numExperiments);
};

} // namspace experiments
} // namespace kmeans

#endif //KMEANSII_EXPERIMENTRUNNER_HH
